<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
// Copyright (c) FUJIWARA, Yusuke and all contributors.
// This file is licensed under Apache2 license.
// See the LICENSE in the project root for more information.

// <auto-generated /> 
// This file is generated from acompanying .tt file.
// DO NOT edit this file directly, edit .tt file instead.

using System;
using System.Buffers;
using System.Runtime.CompilerServices;
using MsgPack.Internal;

namespace MsgPack.Json
{
	partial class JsonDecoder
	{
<#
foreach (var type in
	new []
	{
		"Byte",
		"SByte",
		"Int16",
		"UInt16",
		"Int32",
		"UInt32",
		"Int64",
		"UInt64",
		"Single",
		"Double"
	}
)
{
#>
		/// <inheritdoc />
		[MethodImpl(MethodImplOptionsShim.AggressiveInlining)]
		public sealed override <#= type #> Decode<#= type #>(ref SequenceReader<byte> source, out int requestHint)
		{
			this.ReadTrivia(ref source);
			return this.Decode<#= type #>Core(ref source, out requestHint);
		}

		[MethodImpl(MethodImplOptionsShim.AggressiveInlining)]
		private <#= type #> Decode<#= type #>Core(ref SequenceReader<byte> source, out int requestHint)
			=> (<#= type #>)this.DecodeNumber(ref source, out requestHint);

<#
} // foreach (var type)
#>
	}
}
