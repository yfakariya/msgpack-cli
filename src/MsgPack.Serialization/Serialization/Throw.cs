// Copyright (c) FUJIWARA, Yusuke and all contributors.
// This file is licensed under Apache2 license.
// See the LICENSE in the project root for more information.

// <auto-generated /> 
// This file is generated from acompanying .tt file.
// DO NOT edit this file directly, edit .tt file instead.

#nullable enable

using System;
using System.Reflection;
using System.Runtime.Serialization;

namespace MsgPack.Serialization
{
	internal static partial class Throw
	{
		public static void ValueTypeCannotBeNull(string? name, Type memberType, Type declaringType)
			=> throw new SerializationException($"Member '{name}' of type '{declaringType}' cannot be null because the member type is non-nullable value type('{memberType}').");

		public static void NullIsProhibitedForReadOnlyMember(string? memberName)
			=> throw new SerializationException($"The member '{memberName}' cannot be set null because it is read only.");

		public static void UnsettableCollectionMemberMustNotBeNull(MemberInfo member)
			=> throw new SerializationException($"Unsettable member '{member}' in '{member?.DeclaringType}' returns null collection.");

		public static void UnsettableCollectionMemberTypeMustNotBeReadOnly(MemberInfo member)
			=> throw new SerializationException($"Type of unsettable member '{member}' in '{member?.DeclaringType}' is read only collection type ('{member?.GetMemberValueType()}').");

		public static void DeserializeToOnlyAvailableForMutableCollection(Type targetType)
			=> throw new NotSupportedException($"DeserializeTo is not available because '{targetType}' is not a mutable collection.");
	}
}
