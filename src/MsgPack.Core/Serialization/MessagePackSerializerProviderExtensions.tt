<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ include file="../../Common/SerializerProviderExtensions.ttinclude" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
#warning TODO: Move this type to MsgPack.Serialization with SerializationOptionsBuider.UseMsgPack() extension method.

#if false
<#
Write(
	"MsgPack.Serialization",
	"SerializerProviderExtensions",
	WriteXmlDoc,
	new [] { "MsgPack.Codecs" },
	new Spec { BaseTypeName = "Serializer",	IsGeneric = false,	ProviderTypeName = "SerializerProvider",	Codec = "MessagePack" },
	new Spec { BaseTypeName = "Serializer",	IsGeneric = true,	ProviderTypeName = "SerializerProvider",	Codec = "MessagePack" }
);
#>
#endif
<#+
private void WriteXmlDoc()
{
#>
#warning TODO: Move this type to MsgPack.Serialization with SerializationOptionsBuider.UseMsgPack() extension method.
	/// <summary>
	///		Defines extension methods with typed parameter for serializer providers using msgpack format.
	/// </summary>
<#+
}
#>
