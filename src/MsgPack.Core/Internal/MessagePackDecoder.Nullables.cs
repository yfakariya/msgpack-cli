// Copyright (c) FUJIWARA, Yusuke and all contributors.
// This file is licensed under Apache2 license.
// See the LICENSE in the project root for more information.

// <auto-generated /> 
// This file is generated from acompanying .tt file.
// DO NOT edit this file directly, edit .tt file instead.

using System;
using System.Buffers;
using System.Runtime.CompilerServices;

namespace MsgPack.Internal
{
	partial class MessagePackDecoder
	{
		/// <inheritdoc />
		[MethodImpl(MethodImplOptionsShim.AggressiveInlining)]
		public sealed override Byte? DecodeNullableByte(in SequenceReader<byte> source, out int requestHint)
		{
			if (this.TryReadNull(source))
			{
				requestHint = 0;
				return null;
			}

			return this.DecodeByte(source, out requestHint);
		}

		/// <inheritdoc />
		[MethodImpl(MethodImplOptionsShim.AggressiveInlining)]
		public sealed override SByte? DecodeNullableSByte(in SequenceReader<byte> source, out int requestHint)
		{
			if (this.TryReadNull(source))
			{
				requestHint = 0;
				return null;
			}

			return this.DecodeSByte(source, out requestHint);
		}

		/// <inheritdoc />
		[MethodImpl(MethodImplOptionsShim.AggressiveInlining)]
		public sealed override Int16? DecodeNullableInt16(in SequenceReader<byte> source, out int requestHint)
		{
			if (this.TryReadNull(source))
			{
				requestHint = 0;
				return null;
			}

			return this.DecodeInt16(source, out requestHint);
		}

		/// <inheritdoc />
		[MethodImpl(MethodImplOptionsShim.AggressiveInlining)]
		public sealed override UInt16? DecodeNullableUInt16(in SequenceReader<byte> source, out int requestHint)
		{
			if (this.TryReadNull(source))
			{
				requestHint = 0;
				return null;
			}

			return this.DecodeUInt16(source, out requestHint);
		}

		/// <inheritdoc />
		[MethodImpl(MethodImplOptionsShim.AggressiveInlining)]
		public sealed override Int32? DecodeNullableInt32(in SequenceReader<byte> source, out int requestHint)
		{
			if (this.TryReadNull(source))
			{
				requestHint = 0;
				return null;
			}

			return this.DecodeInt32(source, out requestHint);
		}

		/// <inheritdoc />
		[MethodImpl(MethodImplOptionsShim.AggressiveInlining)]
		public sealed override UInt32? DecodeNullableUInt32(in SequenceReader<byte> source, out int requestHint)
		{
			if (this.TryReadNull(source))
			{
				requestHint = 0;
				return null;
			}

			return this.DecodeUInt32(source, out requestHint);
		}

		/// <inheritdoc />
		[MethodImpl(MethodImplOptionsShim.AggressiveInlining)]
		public sealed override Int64? DecodeNullableInt64(in SequenceReader<byte> source, out int requestHint)
		{
			if (this.TryReadNull(source))
			{
				requestHint = 0;
				return null;
			}

			return this.DecodeInt64(source, out requestHint);
		}

		/// <inheritdoc />
		[MethodImpl(MethodImplOptionsShim.AggressiveInlining)]
		public sealed override UInt64? DecodeNullableUInt64(in SequenceReader<byte> source, out int requestHint)
		{
			if (this.TryReadNull(source))
			{
				requestHint = 0;
				return null;
			}

			return this.DecodeUInt64(source, out requestHint);
		}

		/// <inheritdoc />
		[MethodImpl(MethodImplOptionsShim.AggressiveInlining)]
		public sealed override Single? DecodeNullableSingle(in SequenceReader<byte> source, out int requestHint)
		{
			if (this.TryReadNull(source))
			{
				requestHint = 0;
				return null;
			}

			return this.DecodeSingle(source, out requestHint);
		}

		/// <inheritdoc />
		[MethodImpl(MethodImplOptionsShim.AggressiveInlining)]
		public sealed override Double? DecodeNullableDouble(in SequenceReader<byte> source, out int requestHint)
		{
			if (this.TryReadNull(source))
			{
				requestHint = 0;
				return null;
			}

			return this.DecodeDouble(source, out requestHint);
		}

		/// <inheritdoc />
		[MethodImpl(MethodImplOptionsShim.AggressiveInlining)]
		public sealed override Boolean? DecodeNullableBoolean(in SequenceReader<byte> source, out int requestHint)
		{
			if (this.TryReadNull(source))
			{
				requestHint = 0;
				return null;
			}

			return this.DecodeBoolean(source, out requestHint);
		}

	}
}
